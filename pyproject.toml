[tool.poetry]
name = "vars-gridview"
version = "0.11.0"
description = "VARS GridView is a tool for reviewing and correcting VARS localizations in bulk."
authors = [
    "Kevin Barnard <kbarnard@mbari.org>",
    "Paul Roberts <proberts@mbari.org>"
]
readme = "README.md"
repository = "https://github.com/mbari-org/vars-gridview"
keywords = ["VARS", "localization", "annotation"]
license = "MIT"
include = ["LICENSE"]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
pyqt6 = "^6.4.0"
pymssql = "^2.2.4"
requests = "^2.27.1"
pyqtgraph = "^0.13.0"
opencv-python = "^4.5.5.62"
qdarkstyle = "^3.0.3"
beholder-client = "^0.1.0"
sharktopoda-client = "^0.4.5"
platformdirs = "^4.0.0"

[tool.poetry.scripts]
vars-gridview = "vars_gridview.scripts.run:main"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
isort = "^5.12.0"
pre-commit = "^3.5.0"
pyinstaller = "^6.2.0"
python-semantic-release = "^8.3.0"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
